# ***************** Universidad de los Andes ***********************
# ****** Departamento de Ingeniería de Sistemas y Computación ******
# ********** Arquitectura y diseño de Software - ISIS2503 **********
#
# Infraestructura para laboratorio de microservicios con Django
# Elementos a desplegar:
# 1. Firewalls:
#    - msd-api-gateway
#    - msd-services-apps
#    - msd-services-apps-web
#    - msd-service-sqldb
#    - msd-service-mongodb
#    - firewall-message-rabbit
# 2. Instancias MVs (bases de datos):
#    - msd-kong-instance
#    - msd-facturacion-db (postgreSQL instalado y configurado)
#    - msd-instituciones-db (mongodb instalado y configurado)
#    - msd-cronogramas-db
#    - msd-estudiantes-db
#    - msd-usuarios-db
#    - msd-reportes-query-db
# 3. Instancias MVs (servicios):
#    - msd-facturacion-ms (Servicio de variables descargado)
#    - msd-instituciones-ms (Servicio de instituciones instalado y configurado)
#    - msd-cronogramas-ms
#    - msd-estudiantes-ms
#    - msd-usuarios-ms
#    - msd-batch-ms
#    - msd-reportes-ms
#    - msd-rabbit-instance (mensajería para CQRS)
resources:
# Firewall rules
- name: msd-api-gateway
  type: compute.v1.firewall
  properties:
    network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
    priority: 1000
    direction: INGRESS
    sourceRanges: 
    - 0.0.0.0/0
    targetTags:
    - msd-api-gateway
    allowed:
    - IPProtocol: TCP
      ports: 
      - 8000
- name: msd-services-apps
  type: compute.v1.firewall
  properties:
    network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
    priority: 1000
    direction: INGRESS
    sourceTags: 
    - msd-api-gateway
    targetTags:
    - msd-services-firewall
    allowed:
    - IPProtocol: TCP
      ports: 
      - 8080
- name: msd-services-apps-web
  type: compute.v1.firewall
  properties:
    network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
    priority: 1000
    direction: INGRESS
    sourceRanges: 
    - 0.0.0.0/0
    targetTags:
    - msd-services-firewall
    allowed:
    - IPProtocol: TCP
      ports: 
      - 8080
- name: msd-service-sqldb
  type: compute.v1.firewall
  properties:
    network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
    priority: 1000
    direction: INGRESS
    sourceTags: 
    - msd-services-firewall
    targetTags:
    - msd-service-sqldb
    allowed:
    - IPProtocol: TCP
      ports: 
      - 5432

# Firewall rules
- name: msd-service-nosqldb
  type: compute.v1.firewall
  properties:
    network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
    priority: 1000
    direction: INGRESS
    sourceTags: 
    - msd-services-firewall
    targetTags:
    - msd-service-mongodb
    allowed:
    - IPProtocol: TCP
      ports: 
      - 27017

# Firewall rules
- name: firewall-message-rabbit
  type: compute.v1.firewall
  properties:
    network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
    priority: 1000
    direction: INGRESS
    sourceTags: 
    - msd-services-firewall
    targetTags:
    - rabbit-instance
    allowed:
    - IPProtocol: TCP
      ports: 
      - 5672


# Kong instance
- name: msd-kong-instance
  type: compute.v1.instance
  properties:
    zone: us-central1-a
    machineType: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/zones/us-central1-a/machineTypes/e2-micro
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/cos-cloud/global/images/cos-101-17162-463-8
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
      networkIP: 10.128.0.81
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-api-gateway
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo mkdir /home/labs
          cd /home/labs
          sudo git clone https://github.com/ArquiSoft-Soluciones-Solidas-SAS/sprint4.git
          cd sprint4
          docker network create kong-net
          docker run -d --name kong --network=kong-net --restart=always \
          -v "$(pwd):/kong/declarative/" -e "KONG_DATABASE=off" \
          -e "KONG_DECLARATIVE_CONFIG=/kong/declarative/kong.yaml" \
          -p 8000:8000 kong/kong-gateway

# Database instances
- name: msd-facturacion-db
  type: compute.v1.instance
  properties:
    zone: us-central1-a
    machineType: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/zones/us-central1-a/machineTypes/e2-micro
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/cos-cloud/global/images/cos-101-17162-463-8
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
      networkIP: 10.128.0.82
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-service-sqldb
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          docker run --restart=always -d -e POSTGRES_USER=microservicios_user -e POSTGRES_DB=facturacion_service -e POSTGRES_PASSWORD=password -p 5432:5432 --name facturacion_service postgres

- name: msd-instituciones-db
  type: compute.v1.instance
  properties:
    zone: us-central1-a
    machineType: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/zones/us-central1-a/machineTypes/e2-micro
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/cos-cloud/global/images/cos-101-17162-463-8
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
      networkIP: 10.128.0.83
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-service-nosqldb
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          docker run --restart=always -d --name instituciones-service -p 27017:27017 \
                            -e MONGO_INITDB_ROOT_USERNAME=microservicios_user \
                            -e MONGO_INITDB_ROOT_PASSWORD=password \
                            mongodb/mongodb-community-server

- name: msd-cronogramas-db
  type: compute.v1.instance
  properties:
    zone: us-central1-a
    machineType: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/zones/us-central1-a/machineTypes/e2-micro
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/cos-cloud/global/images/cos-101-17162-463-8
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
      networkIP: 10.128.0.84
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-service-nosqldb
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          docker run --restart=always -d --name cronogramas-service -p 27017:27017 \
                            -e MONGO_INITDB_ROOT_USERNAME=microservicios_user \
                            -e MONGO_INITDB_ROOT_PASSWORD=password \
                            mongodb/mongodb-community-server

- name: msd-estudiantes-db
  type: compute.v1.instance
  properties:
    zone: us-central1-a
    machineType: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/zones/us-central1-a/machineTypes/e2-micro
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/cos-cloud/global/images/cos-101-17162-463-8
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
      networkIP: 10.128.0.85
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-service-nosqldb
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          docker run --restart=always -d --name estudiantes-service -p 27017:27017 \
                            -e MONGO_INITDB_ROOT_USERNAME=microservicios_user \
                            -e MONGO_INITDB_ROOT_PASSWORD=password \
                            mongodb/mongodb-community-server

- name: msd-usuarios-db
  type: compute.v1.instance
  properties:
    zone: us-central1-a
    machineType: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/zones/us-central1-a/machineTypes/e2-micro
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/cos-cloud/global/images/cos-101-17162-463-8
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
      networkIP: 10.128.0.86
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-service-nosqldb
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          docker run --restart=always -d --name usuarios-service -p 27017:27017 \
                            -e MONGO_INITDB_ROOT_USERNAME=microservicios_user \
                            -e MONGO_INITDB_ROOT_PASSWORD=password \
                            mongodb/mongodb-community-server

- name: msd-reportes-query-db
  type: compute.v1.instance
  properties:
    zone: us-central1-a
    machineType: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/zones/us-central1-a/machineTypes/e2-micro
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/cos-cloud/global/images/cos-101-17162-463-8
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
      networkIP: 10.128.0.87
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-service-nosqldb
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          docker run --restart=always -d --name reportes-query-service -p 27017:27017 \
                            -e MONGO_INITDB_ROOT_USERNAME=microservicios_user \
                            -e MONGO_INITDB_ROOT_PASSWORD=password \
                            mongodb/mongodb-community-server

- name: msd-redis-db
  type: compute.v1.instance
  properties:
    zone: us-central1-a
    machineType: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/zones/us-central1-a/machineTypes/n1-standard-1
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20240307b
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
      networkIP: 10.128.0.88
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-service-nosqldb
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          # Actualizar el sistema
          sudo apt update -y && sudo apt upgrade -y

          # Instalar Redis
          sudo apt install redis-server -y

          # Configurar Redis para aceptar conexiones externas
          sudo sed -i 's/^bind .*/bind 0.0.0.0 ::1/' /etc/redis/redis.conf
          sudo sed -i 's/^protected-mode yes/protected-mode no/' /etc/redis/redis.conf

          # Reiniciar el servicio Redis
          sudo systemctl enable redis-server
          sudo systemctl restart redis-server

          # Confirmar que Redis está corriendo
          if systemctl is-active --quiet redis-server; then
              echo "Redis instalado y en ejecución correctamente."
          else
              echo "Error al iniciar Redis."
              exit 1
          fi

# Service instances
- name: msd-facturacion-ms
  type: compute.v1.instance
  properties:
    zone: us-east1-b
    machineType: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/zones/us-east1-b/machineTypes/n1-standard-1
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20240307b
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
      networkIP: 10.142.0.5
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-services-firewall
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo apt install python3-pip -y
          sudo mkdir /labs
          cd /labs
          sudo git clone https://github.com/ArquiSoft-Soluciones-Solidas-SAS/facturacion-service.git
          cd facturacion-service
          sudo pip install -r requirements.txt
          sudo pip install pika
          sudo pip install django
          cd ofipensiones
          python3 manage.py makemigrations
          python3 manage.py migrate
          sudo pip install mongoengine


- name: msd-instituciones-ms
  type: compute.v1.instance
  properties:
    zone: us-east1-b
    machineType: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/zones/us-east1-b/machineTypes/n1-standard-1
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20240307b
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
      networkIP: 10.142.0.6
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-services-firewall
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo apt install python3-pip -y
          sudo mkdir /labs
          cd /labs
          sudo git clone https://github.com/ArquiSoft-Soluciones-Solidas-SAS/instituciones-service.git
          cd instituciones-service
          sudo pip install -r requirements.txt
          sudo pip install pika
          sudo pip install django
          sudo pip install mongoengine
          # cd ofipensiones
          # python3 -c "
          # import django
          # django.setup()

          # # Importa el método que deseas ejecutar
          # from institucionesService.factory import crear_instituciones_con_cursos

          # # Llama al método para crear las instituciones con cursos
          # crear_instituciones_con_cursos()
          # "

- name: msd-cronogramas-ms
  type: compute.v1.instance
  properties:
    zone: us-east1-b
    machineType: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/zones/us-east1-b/machineTypes/n1-standard-1
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20240307b
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
      networkIP: 10.142.0.7
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-services-firewall
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo apt install python3-pip -y
          sudo mkdir /labs
          cd /labs
          sudo git clone https://github.com/ArquiSoft-Soluciones-Solidas-SAS/cronogramas-service.git
          cd cronogramas-service
          sudo pip install -r requirements.txt
          sudo pip install pika
          sudo pip install django
          sudo pip install mongoengine

- name: msd-estudiantes-ms
  type: compute.v1.instance
  properties:
    zone: us-east1-b
    machineType: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/zones/us-east1-b/machineTypes/n1-standard-1
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20240307b
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
      networkIP: 10.142.0.8
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-services-firewall
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo apt install python3-pip -y
          sudo mkdir /labs
          cd /labs
          sudo git clone https://github.com/ArquiSoft-Soluciones-Solidas-SAS/estudiantes-service.git
          cd estudiantes-service
          sudo pip install -r requirements.txt
          sudo pip install pika
          sudo pip install django
          sudo pip install mongoengine

- name: msd-usuarios-ms
  type: compute.v1.instance
  properties:
    zone: us-east1-b
    machineType: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/zones/us-east1-b/machineTypes/n1-standard-1
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20240307b
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
      networkIP: 10.142.0.9
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-services-firewall
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo apt install python3-pip -y
          sudo mkdir /labs
          cd /labs
          sudo git clone https://github.com/ArquiSoft-Soluciones-Solidas-SAS/usuarios-service.git
          cd usuarios-service
          sudo pip install -r requirements.txt
          sudo pip install pika
          sudo pip install django
          sudo pip install mongoengine

- name: msd-batch-ms
  type: compute.v1.instance
  properties:
    zone: us-east1-b
    machineType: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/zones/us-east1-b/machineTypes/n1-standard-1
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20240307b
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
      networkIP: 10.142.0.10
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-services-firewall
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo apt install software-properties-common -y
          sudo add-apt-repository ppa:deadsnakes/ppa -y
          sudo apt-get update
          sudo apt install python3.12 -y
          sudo curl -sS https://bootstrap.pypa.io/get-pip.py | python3.12
          sudo mkdir /home/labs
          cd /home/labs
          sudo git clone https://github.com/ArquiSoft-Soluciones-Solidas-SAS/batch-service.git
          cd batch-service
          sudo python3.12 -m pip install -r requirements.txt

- name: msd-reportes-ms
  type: compute.v1.instance
  properties:
    zone: us-east1-b
    machineType: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/zones/us-east1-b/machineTypes/n1-standard-1
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20240307b
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
      networkIP: 10.142.0.11
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-services-firewall
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo apt install python3-pip -y
          sudo mkdir /labs
          cd /labs
          sudo git clone https://github.com/ArquiSoft-Soluciones-Solidas-SAS/reportes-service.git
          cd reportes-service
          sudo pip install -r requirements.txt
          sudo pip install pika
          sudo pip install django
          sudo pip install mongoengine
          cd ofipensiones/rabbit-queue
          sudo nohup python3 subscriber.py > subscriber.log 2>&1 &


- name: msd-rabbit-instance
  type: compute.v1.instance
  properties:
    zone: us-east1-b
    machineType: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/zones/us-east1-b/machineTypes/n1-standard-1
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/cos-cloud/global/images/cos-101-17162-463-8
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/<id-proyecto>/global/networks/default
      networkIP: 10.142.0.12
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - rabbit-instance
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          docker run --restart=always -d --hostname microservicios_user --name microservicios_user \
                            -e RABBITMQ_DEFAULT_USER=microservicios_user \
                            -e RABBITMQ_DEFAULT_PASS=password \
                            -p 5672:5672 rabbitmq:3